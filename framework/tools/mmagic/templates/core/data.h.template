/*
 * Copyright {{config.copyright_year}} Morse Micro
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Warning: this file is autogenerated. Do not modify by hand.
 */

#pragma once

#include "core/autogen/mmagic_core_types.h"

#include "mmagic.h"
{%- for module in config.modules %}
#include "mmagic_core_{{module.name}}.h"
{%- endfor %}


/** Maximum length of the @c app_version string (excluding null terminator). */
#define MMAGIC_SYS_MAX_APP_VERSION_LENGTH   (31)

/** Maximum number of streams we support in MMAGIC */
#define MMAGIC_MAX_STREAMS  32

/**
 * Function type for M2M/CLI-specific event implementation.
 *
 * @param core          MMAGIC core data structure.
 * @param payload       Event payload.
 * @param payload_len   Length of the event payload.
 */
typedef {{config.find_datatype("enum_status")}} (*mmagic_event_fn_t)(void *arg, uint8_t subsystem_id, uint8_t event_id, const uint8_t *payload, size_t payload_len);

/** mmagic core data structure. */
struct mmagic_data
{
    {%- for module in config.modules %}
    struct mmagic_{{module.name}}_data {{module.name}}_data;
    {%- endfor %}

    /** Reference to the regulatory database */
    const struct mmwlan_regulatory_db *reg_db;

    /** Application version string. This is a null terminated string. */
    char app_version[MMAGIC_SYS_MAX_APP_VERSION_LENGTH + 1];

    /** Stream context for each stream. */
    struct mmagic_m2m_stream* stream[MMAGIC_MAX_STREAMS];

    /** Opaque arg to pass to @c set_deep_sleep_mode_cb. */
    void *set_deep_sleep_mode_cb_arg;
    /** Set deep sleep mode callback */
    mmagic_set_deep_sleep_mode_cb_t set_deep_sleep_mode_cb;

    /** Event processing function implementation. */
    mmagic_event_fn_t event_fn;
    /** Opaque argument for the event implementation. */
    void *event_fn_arg;
};

{% for module in config.modules %}
static inline struct mmagic_{{module.name}}_data *mmagic_data_get_{{module.name}}(struct mmagic_data *core)
{
    return &core->{{module.name}}_data;
}
{% endfor %}

void mmagic_core_init_modules(struct mmagic_data *mmagicd);
