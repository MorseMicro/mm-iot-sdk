/*
 * Copyright {{config.copyright_year}} Morse Micro
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Warning: this file is autogenerated. Do not modify by hand.
 */

#pragma once

#include "mmagic_core_types.h"

struct mmagic_data;

struct mmagic_{{data.name}}_config
{
    {%- for var in data.configs | sort(attribute="id") %}
    /** {{var.description | wordwrap(80) | replace('\n', '\n * ') | indent(4)}} */
    {{config.find_datatype(var.type)}} {{var.name}}{{config.get_array_element(var.type)}};
    {%- endfor %}
    {%- if not data.configs %}
    uint8_t reserved[0]; /* So that the struct is not empty */
    {%- endif %}
};

struct mmagic_{{data.name}}_data
{
    struct mmagic_{{data.name}}_config config;
};

/**
 * Function to initialize the core data structure and register the ops functions.
 *
 * @param core   Reference to to global mmagic context struct.
 */
void mmagic_core_{{data.name}}_init(struct mmagic_data *core);

/**
 * Function to load settings from persistent store for the core {{data.name}} subsystem.
 *
 * @param core   Reference to to global mmagic context struct.
 */
void mmagic_core_{{data.name}}_load_all(struct mmagic_data *core);

/**
 * Function to save settings to persistent store for the core {{data.name}} subsystem.
 *
 * @param core   Reference to to global mmagic context struct.
 */
void mmagic_core_{{data.name}}_save_all(struct mmagic_data *core);

/**
 * Function to start any of the core processes for the core {{data.name}} subsystem.
 *
 * @param core   Reference to to global mmagic context struct.
 */
void mmagic_core_{{data.name}}_start(struct mmagic_data *core);

{% for command in data.commands %}
{%- if command.command_args -%}
/** Command arguments structure for {{data.name}}_{{command.name}} */
struct MM_PACKED mmagic_core_{{data.name}}_{{command.name}}_cmd_args
{
    {%- for arg in command.command_args %}
    {{config.find_datatype(arg.type)}} {{arg.name}}{{config.get_array_element(arg.type)}};
    {%- endfor %}
};
{% endif %}
{%- if command.response_args %}
/** Response arguments structure for {{data.name}}_{{command.name}} */
struct MM_PACKED mmagic_core_{{data.name}}_{{command.name}}_rsp_args
{
    {%- for arg in command.response_args %}
    {{config.find_datatype(arg.type)}} {{arg.name}}{{config.get_array_element(arg.type)}};
    {%- endfor %}
};
{% endif %}
{{config.find_datatype("enum_status")}} mmagic_core_{{data.name}}_{{command.name}}(
        struct mmagic_data *core
{%- if command.command_args -%}
        ,
        const struct mmagic_core_{{data.name}}_{{command.name}}_cmd_args *cmd_args
{%- endif -%}
{%- if command.response_args -%}
        ,
        struct mmagic_core_{{data.name}}_{{command.name}}_rsp_args *rsp_args
{%- endif -%}
    );
{% endfor %}
{% if data.events %}
/*
 * ---------------------------------------------------------------------------------------------
 * Internal API: to be used by the implementation C file only.
 * ---------------------------------------------------------------------------------------------
 */

{% for event in data.events %}
{{config.find_datatype("enum_status")}} mmagic_core_event_{{data.name}}_{{event.name}}(
        struct mmagic_data *core
{%- if event.event_args -%}
        ,
        const struct mmagic_core_event_{{data.name}}_{{event.name}}_args *args
{%- endif -%}
    );
{% endfor %}
{% endif -%}
