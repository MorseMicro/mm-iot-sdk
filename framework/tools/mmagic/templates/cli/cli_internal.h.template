/*
 * Copyright {{config.copyright_year}} Morse Micro
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Warning: this file is autogenerated. Do not modify by hand.
 */

#pragma once

#include <stddef.h>
#include <stdio.h>

#include "cli/mmagic_cli.h"
#include "cli/embedded_cli.h"
#include "core/autogen/mmagic_core_data.h"

/** Size of buffer used to print config element value */
#define MMAGIC_CLI_PRINT_BUF_LEN 192
#define MMAGIC_CLI_RX_BUFFER_SIZE 16
/** Needs to be large enough to accomodate WLAN password, IP and MAC address */
#define MMAGIC_CLI_CMD_BUFFER_SIZE 128
#define MMAGIC_CLI_HISTORY_SIZE 8
#define MMAGIC_CLI_BINDING_COUNT 32


struct mmagic_cli_config_elem
{
    /** Null terminate string containing the name of the config element */
    char *name;
    /**
     * Retrieves the value of the config element and prints a corresponding string to the cli.
     *
     * @param mmd   Reference to the mmagic_core data structure.
     * @param cli   Reference to the cli instance to display the string on.
     *
     * @return On success @c 0 else a negative value on failure.
     */
    int (*get)(struct mmagic_data *mmagicd, EmbeddedCli *cli);
    /**
     * Stores a value given in the string in the corresponding config element data structure if
     * compatible.
     *
     * @param mmd   Reference to the mmagic_core data structure.
     * @param cli   Reference to the cli instance to display the string on.
     * @param val   Reference to a null terminated string containing the value to set.
     *
     * @return On success @c 0 else a negative value on failure.
     */
    int (*set)(struct mmagic_data *mmagicd, EmbeddedCli *cli, const char *val);
};

/**
 * Binary search through an array of @c mmagic_cli_config_elem struct for one that has a matching @c name
 * element.
 *
 * @param elements  Array of @c mmagic_cli_config_elem structs
 * @param num       Number of elements in the array
 * @param name      NULL terminated string to match against the @c name element
 *
 * @return Reference to the matching element struct if successful else @c NULL
 */
struct mmagic_cli_config_elem *mmagic_cli_element_search(
    struct mmagic_cli_config_elem *elements, size_t num, const char* name);

/**
 * Printf function for displaying on the CLI
 *
 * @param cli       Reference to the CLI structure to display on.
 * @param format    Printf format to use.
 * @param ...       Variable args list to populate the format string.
 *
 */
void mmagic_cli_printf(EmbeddedCli *cli, const char *format, ...);

/**
 * Helper function to insert a config accessor into the @c config_accessors linked list in the cli
 * data struct.
 *
 * @param ctx       Reference to the MMAGIC CLI context
 * @param accessor  Reference to the accessor to be added. This function will take ownership.
 *
 * @note It is assumed that @c accessor->next is NULL. i.e. it is a single item and not a list.
 */
void mmagic_cli_register_config_accessor(struct mmagic_cli *ctx,
                                         struct mmagic_cli_config_accessor *accessor);

/**
 * Initialize CLI modules.
 */
void mmagic_cli_init_modules(struct mmagic_cli *ctx);


/**
 * CLI event handler. See @ref mmagic_event_fn_t for argument details.
 *
 * @see mmagic_event_fn_t
 */
enum mmagic_status mmagic_cli_handle_event(
    void *arg, uint8_t subsystem_id, uint8_t event_id, const uint8_t *payload, size_t payload_len);
