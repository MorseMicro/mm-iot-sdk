/*
 * Copyright {{config.copyright_year}} Morse Micro
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Warning: this file is autogenerated. Do not modify by hand.
 */

{%- for module in config.modules %}
{%- if module.cli_support %}
#include "mmagic_cli_{{module.name}}.h"
{%- endif %}
{%- endfor %}

static void mmagic_cli_init_modules(struct mmagic_cli *ctx)
{
{%- for module in config.modules %}
{%- if module.cli_support %}
    mmagic_cli_{{module.name}}_init(ctx);
{% endif -%}
{% endfor -%}
};

static {{config.find_datatype("enum_status")}} mmagic_cli_handle_event(
    void *arg, uint8_t subsystem_id, uint8_t event_id, const uint8_t *payload, size_t payload_len)
{
    struct mmagic_cli *ctx = (struct mmagic_cli *)arg;

    /* This is from autogenerated code so it is relatively safe to assume payload_len is correct. */
    MM_UNUSED(payload_len);

    switch (subsystem_id)
    {
{%- for module in config.modules %}
{%- if module.cli_support and module.events %}
    case mmagic_{{module.name}}:
        switch (event_id)
        {
{%- for event in module.events %}
        case mmagic_{{module.name}}_event_{{event.name}}:
            mmagic_cli_{{module.name}}_handle_event_{{event.name}}(ctx
{%- if event.event_args -%}
        ,
        (const struct mmagic_core_event_{{module.name}}_{{event.name}}_args *)payload
{%- endif -%}
    );
            return MMAGIC_STATUS_OK;
{%- endfor %}

        default:
            break;
        }
        break;
{%- endif %}
{%- endfor %}

    default:
        break;
    }

    /* If we get here this indicates programming error since this should only be invoked
     * from autogenerated code. */
    MMOSAL_ASSERT(false);
    return MMAGIC_STATUS_INVALID_ARG;
}