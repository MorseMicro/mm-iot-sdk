/*
 * Copyright 2024 Morse Micro
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Warning: this file is autogenerated. Do not modify by hand.
 */

#pragma once

#include "mmconfig.h"

/* Maximum allowed length of any value string, needs to accomodate IP and MAC address strings */
#define MAX_VAL_LEN     32

void mmagic_core_ip_load_all(struct mmagic_data *core)
{
    struct mmagic_ip_data *data = &core->ip_data;
    char val[MAX_VAL_LEN];
    if (mmconfig_read_string("ip.ip_addr", val, sizeof(val)) > 0)
    {
        (void)mmagic_string_to_struct_ip_addr(&data->config.ip_addr, val);
    }

    if (mmconfig_read_string("ip.netmask", val, sizeof(val)) > 0)
    {
        (void)mmagic_string_to_struct_ip_addr(&data->config.netmask, val);
    }

    if (mmconfig_read_string("ip.gateway", val, sizeof(val)) > 0)
    {
        (void)mmagic_string_to_struct_ip_addr(&data->config.gateway, val);
    }

    if (mmconfig_read_string("ip.dns_server0", val, sizeof(val)) > 0)
    {
        (void)mmagic_string_to_struct_ip_addr(&data->config.dns_server0, val);
    }

    if (mmconfig_read_string("ip.dns_server1", val, sizeof(val)) > 0)
    {
        (void)mmagic_string_to_struct_ip_addr(&data->config.dns_server1, val);
    }

    if (mmconfig_read_string("ip.dhcp_enabled", val, sizeof(val)) > 0)
    {
        (void)mmagic_string_to_bool(&data->config.dhcp_enabled, val);
    }

    if (mmconfig_read_string("ip.dhcp_offload", val, sizeof(val)) > 0)
    {
        (void)mmagic_string_to_bool(&data->config.dhcp_offload, val);
    }

}

void mmagic_core_ip_save_all(struct mmagic_data *core)
{
    struct mmagic_ip_data *data = &core->ip_data;
    char val[MAX_VAL_LEN];
    mmagic_struct_ip_addr_to_string(&data->config.ip_addr, val, sizeof(val));
    mmconfig_write_string("ip.ip_addr", val);

    mmagic_struct_ip_addr_to_string(&data->config.netmask, val, sizeof(val));
    mmconfig_write_string("ip.netmask", val);

    mmagic_struct_ip_addr_to_string(&data->config.gateway, val, sizeof(val));
    mmconfig_write_string("ip.gateway", val);

    mmagic_struct_ip_addr_to_string(&data->config.dns_server0, val, sizeof(val));
    mmconfig_write_string("ip.dns_server0", val);

    mmagic_struct_ip_addr_to_string(&data->config.dns_server1, val, sizeof(val));
    mmconfig_write_string("ip.dns_server1", val);

    mmagic_bool_to_string(data->config.dhcp_enabled, val, sizeof(val));
    mmconfig_write_string("ip.dhcp_enabled", val);

    mmagic_bool_to_string(data->config.dhcp_offload, val, sizeof(val));
    mmconfig_write_string("ip.dhcp_offload", val);

}



