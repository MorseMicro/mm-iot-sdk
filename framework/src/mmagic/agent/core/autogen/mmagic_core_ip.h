/*
 * Copyright 2024 Morse Micro
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Warning: this file is autogenerated. Do not modify by hand.
 */

#pragma once

#include "mmagic_core_types.h"

struct mmagic_data;

struct mmagic_ip_config
{
    /** IP address to use for a static network connection. This will take effect when
     * the reload command is successfully executed. */
    struct struct_ip_addr ip_addr;
    /** Netmask to use for a static network connection. This will take effect when the
     * reload command is successfully executed. */
    struct struct_ip_addr netmask;
    /** Gateway to use for a static network connection. This will take effect when the
     * reload command is successfully executed. */
    struct struct_ip_addr gateway;
    /** Primary DNS server IP address. If a value is specified this will override the
     * primary DNS server provided by DHCP (if any). Changes will take effect when the
     * reload command is successfully executed. */
    struct struct_ip_addr dns_server0;
    /** Secondary DNS server IP address. If a value is specified this will override the
     * secondary DNS server provided by DHCP (if any). Changes  will take effect when
     * the reload command is successfully executed. Note that this option may be
     * ignored by some IP stacks. */
    struct struct_ip_addr dns_server1;
    /** True to enable DHCP for IP address configuration, or false to use the static
     * configuration given by ip_addr, netmask, and gateway. This will take effect when
     * the reload command is successfully executed. */
    bool dhcp_enabled;
    /** If true, enables DHCP offload which allows the Morse chip to directly handle
     * DHCP discovery and leases without waking up the host processor. Note: this comes
     * into effect only if ip.dhcp_enabled is also true. */
    bool dhcp_offload;
};

struct mmagic_ip_data
{
    struct mmagic_ip_config config;
};

/**
 * Function to initialize the core data structure and register the ops functions.
 *
 * @param core Reference to to global mmagic context struct.
 */
void mmagic_core_ip_init(struct mmagic_data *core);

/**
 * Function to load settings from persistent store for the core ip subsystem.
 *
 * @param core Reference to to global mmagic context struct.
 */
void mmagic_core_ip_load_all(struct mmagic_data *core);

/**
 * Function to save settings to persistent store for the core ip subsystem.
 *
 * @param core Reference to to global mmagic context struct.
 */
void mmagic_core_ip_save_all(struct mmagic_data *core);

/**
 * Function to start any of the core processes for the core ip subsystem.
 *
 * @param core Reference to to global mmagic context struct.
 */
void mmagic_core_ip_start(struct mmagic_data *core);

/** Response arguments structure for ip_status */
struct MM_PACKED mmagic_core_ip_status_rsp_args
{
    struct struct_ip_status status;
};

enum mmagic_status mmagic_core_ip_status(
    struct mmagic_data *core,
    struct mmagic_core_ip_status_rsp_args *rsp_args);

enum mmagic_status mmagic_core_ip_reload(
    struct mmagic_data *core);

/** Command arguments structure for ip_enable_tcp_keepalive_offload */
struct MM_PACKED mmagic_core_ip_enable_tcp_keepalive_offload_cmd_args
{
    uint16_t period_s;
    uint8_t retry_count;
    uint8_t retry_interval_s;
};

enum mmagic_status mmagic_core_ip_enable_tcp_keepalive_offload(
    struct mmagic_data *core,
    const struct mmagic_core_ip_enable_tcp_keepalive_offload_cmd_args *cmd_args);

enum mmagic_status mmagic_core_ip_disable_tcp_keepalive_offload(
    struct mmagic_data *core);

/** Command arguments structure for ip_set_whitelist_filter */
struct MM_PACKED mmagic_core_ip_set_whitelist_filter_cmd_args
{
    struct struct_ip_addr src_ip;
    struct struct_ip_addr dest_ip;
    struct struct_ip_addr netmask;
    uint16_t src_port;
    uint16_t dest_port;
    uint8_t ip_protocol;
    uint16_t llc_protocol;
};

enum mmagic_status mmagic_core_ip_set_whitelist_filter(
    struct mmagic_data *core,
    const struct mmagic_core_ip_set_whitelist_filter_cmd_args *cmd_args);

enum mmagic_status mmagic_core_ip_clear_whitelist_filter(
    struct mmagic_data *core);
