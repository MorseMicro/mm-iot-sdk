/*
 * Copyright 2025 Morse Micro
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Warning: this file is autogenerated. Do not modify by hand.
 */

#pragma once

#include "mmagic_core_types.h"

struct mmagic_data;

struct mmagic_mqtt_config
{
    uint8_t reserved[0]; /* So that the struct is not empty */
};

struct mmagic_mqtt_data
{
    struct mmagic_mqtt_config config;
};

/**
 * Function to initialize the core data structure and register the ops functions.
 *
 * @param core Reference to to global mmagic context struct.
 */
void mmagic_core_mqtt_init(struct mmagic_data *core);

/**
 * Function to load settings from persistent store for the core mqtt subsystem.
 *
 * @param core Reference to to global mmagic context struct.
 */
void mmagic_core_mqtt_load_all(struct mmagic_data *core);

/**
 * Function to save settings to persistent store for the core mqtt subsystem.
 *
 * @param core Reference to to global mmagic context struct.
 */
void mmagic_core_mqtt_save_all(struct mmagic_data *core);

/**
 * Function to start any of the core processes for the core mqtt subsystem.
 *
 * @param core Reference to to global mmagic context struct.
 */
void mmagic_core_mqtt_start(struct mmagic_data *core);

/** Command arguments structure for mqtt_start_agent */
struct MM_PACKED mmagic_core_mqtt_start_agent_cmd_args
{
    struct string254 url;
    uint16_t port;
    struct string100 username;
    struct string100 password;
    bool secure;
};

/** Response arguments structure for mqtt_start_agent */
struct MM_PACKED mmagic_core_mqtt_start_agent_rsp_args
{
    uint8_t stream_id;
};

enum mmagic_status mmagic_core_mqtt_start_agent(
    struct mmagic_data *core,
    const struct mmagic_core_mqtt_start_agent_cmd_args *cmd_args,
    struct mmagic_core_mqtt_start_agent_rsp_args *rsp_args);

/** Command arguments structure for mqtt_publish */
struct MM_PACKED mmagic_core_mqtt_publish_cmd_args
{
    uint8_t stream_id;
    struct string254 topic;
    struct raw1536 payload;
    uint8_t qos;
};

enum mmagic_status mmagic_core_mqtt_publish(
    struct mmagic_data *core,
    const struct mmagic_core_mqtt_publish_cmd_args *cmd_args);

/** Command arguments structure for mqtt_subscribe */
struct MM_PACKED mmagic_core_mqtt_subscribe_cmd_args
{
    uint8_t stream_id;
    struct string254 topic;
    uint8_t qos;
};

enum mmagic_status mmagic_core_mqtt_subscribe(
    struct mmagic_data *core,
    const struct mmagic_core_mqtt_subscribe_cmd_args *cmd_args);

/** Command arguments structure for mqtt_stop_agent */
struct MM_PACKED mmagic_core_mqtt_stop_agent_cmd_args
{
    uint8_t stream_id;
};

enum mmagic_status mmagic_core_mqtt_stop_agent(
    struct mmagic_data *core,
    const struct mmagic_core_mqtt_stop_agent_cmd_args *cmd_args);

/*
 * ---------------------------------------------------------------------------------------------
 * Internal API: to be used by the implementation C file only.
 * ---------------------------------------------------------------------------------------------
 */

enum mmagic_status mmagic_core_event_mqtt_message_received(
    struct mmagic_data *core,
    const struct mmagic_core_event_mqtt_message_received_args *args);

enum mmagic_status mmagic_core_event_mqtt_broker_connection(
    struct mmagic_data *core,
    const struct mmagic_core_event_mqtt_broker_connection_args *args);
