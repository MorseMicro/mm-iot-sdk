/*
 * Copyright 2025 Morse Micro
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Warning: this file is autogenerated. Do not modify by hand.
 */

#pragma once

#include "mmagic_core_types.h"

struct mmagic_data;

struct mmagic_tcp_config
{
    uint8_t reserved[0]; /* So that the struct is not empty */
};

struct mmagic_tcp_data
{
    struct mmagic_tcp_config config;
};

/**
 * Function to initialize the core data structure and register the ops functions.
 *
 * @param core Reference to to global mmagic context struct.
 */
void mmagic_core_tcp_init(struct mmagic_data *core);

/**
 * Function to load settings from persistent store for the core tcp subsystem.
 *
 * @param core Reference to to global mmagic context struct.
 */
void mmagic_core_tcp_load_all(struct mmagic_data *core);

/**
 * Function to save settings to persistent store for the core tcp subsystem.
 *
 * @param core Reference to to global mmagic context struct.
 */
void mmagic_core_tcp_save_all(struct mmagic_data *core);

/**
 * Function to start any of the core processes for the core tcp subsystem.
 *
 * @param core Reference to to global mmagic context struct.
 */
void mmagic_core_tcp_start(struct mmagic_data *core);

/** Command arguments structure for tcp_connect */
struct MM_PACKED mmagic_core_tcp_connect_cmd_args
{
    struct string254 url;
    uint16_t port;
    bool enable_tls;
};

/** Response arguments structure for tcp_connect */
struct MM_PACKED mmagic_core_tcp_connect_rsp_args
{
    uint8_t stream_id;
};

enum mmagic_status mmagic_core_tcp_connect(
    struct mmagic_data *core,
    const struct mmagic_core_tcp_connect_cmd_args *cmd_args,
    struct mmagic_core_tcp_connect_rsp_args *rsp_args);

/** Command arguments structure for tcp_bind */
struct MM_PACKED mmagic_core_tcp_bind_cmd_args
{
    uint16_t port;
};

/** Response arguments structure for tcp_bind */
struct MM_PACKED mmagic_core_tcp_bind_rsp_args
{
    uint8_t stream_id;
};

enum mmagic_status mmagic_core_tcp_bind(
    struct mmagic_data *core,
    const struct mmagic_core_tcp_bind_cmd_args *cmd_args,
    struct mmagic_core_tcp_bind_rsp_args *rsp_args);

/** Command arguments structure for tcp_recv */
struct MM_PACKED mmagic_core_tcp_recv_cmd_args
{
    uint8_t stream_id;
    uint16_t len;
    uint32_t timeout;
};

/** Response arguments structure for tcp_recv */
struct MM_PACKED mmagic_core_tcp_recv_rsp_args
{
    struct raw1536 buffer;
};

enum mmagic_status mmagic_core_tcp_recv(
    struct mmagic_data *core,
    const struct mmagic_core_tcp_recv_cmd_args *cmd_args,
    struct mmagic_core_tcp_recv_rsp_args *rsp_args);

/** Command arguments structure for tcp_send */
struct MM_PACKED mmagic_core_tcp_send_cmd_args
{
    uint8_t stream_id;
    struct raw1536 buffer;
};

enum mmagic_status mmagic_core_tcp_send(
    struct mmagic_data *core,
    const struct mmagic_core_tcp_send_cmd_args *cmd_args);

/** Command arguments structure for tcp_read_poll */
struct MM_PACKED mmagic_core_tcp_read_poll_cmd_args
{
    uint8_t stream_id;
    uint32_t timeout;
};

enum mmagic_status mmagic_core_tcp_read_poll(
    struct mmagic_data *core,
    const struct mmagic_core_tcp_read_poll_cmd_args *cmd_args);

/** Command arguments structure for tcp_write_poll */
struct MM_PACKED mmagic_core_tcp_write_poll_cmd_args
{
    uint8_t stream_id;
    uint32_t timeout;
};

enum mmagic_status mmagic_core_tcp_write_poll(
    struct mmagic_data *core,
    const struct mmagic_core_tcp_write_poll_cmd_args *cmd_args);

/** Command arguments structure for tcp_accept */
struct MM_PACKED mmagic_core_tcp_accept_cmd_args
{
    uint8_t stream_id;
};

/** Response arguments structure for tcp_accept */
struct MM_PACKED mmagic_core_tcp_accept_rsp_args
{
    uint8_t stream_id;
};

enum mmagic_status mmagic_core_tcp_accept(
    struct mmagic_data *core,
    const struct mmagic_core_tcp_accept_cmd_args *cmd_args,
    struct mmagic_core_tcp_accept_rsp_args *rsp_args);

/** Command arguments structure for tcp_close */
struct MM_PACKED mmagic_core_tcp_close_cmd_args
{
    uint8_t stream_id;
};

enum mmagic_status mmagic_core_tcp_close(
    struct mmagic_data *core,
    const struct mmagic_core_tcp_close_cmd_args *cmd_args);
